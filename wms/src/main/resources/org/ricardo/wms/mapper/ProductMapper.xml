<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ricardo.wms.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="org.ricardo.wms.domain.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="costPrice" property="costPrice" jdbcType="DECIMAL" />
    <result column="salePrice" property="salePrice" jdbcType="DECIMAL" />
    <result column="imagePath" property="imagePath" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="brand_id" property="brandId" jdbcType="BIGINT" />
    <result column="brandName" property="brandName" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `product`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="batchDelete">
    delete from product
    where id in <foreach collection="array" open="(" separator="," close=")" item="item">
    ${item}
  </foreach>
  </delete>
  <insert id="insert" parameterType="org.ricardo.wms.domain.Product" useGeneratedKeys="true" keyProperty="id" >
    insert into `product` (name, sn, costPrice, 
      salePrice, imagePath, intro, 
      brand_id, brandName)
    values (#{name,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{costPrice,jdbcType=DECIMAL},
      #{salePrice,jdbcType=DECIMAL}, #{imagePath,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR},
      #{brandId,jdbcType=BIGINT}, #{brandName,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.ricardo.wms.domain.Product" >
    update `product`
    set name = #{name,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      costPrice = #{costPrice,jdbcType=DECIMAL},
      salePrice = #{salePrice,jdbcType=DECIMAL},
      imagePath = #{imagePath,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=BIGINT},
      brandName = #{brandName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, sn, costPrice, salePrice, imagePath, intro, brand_id, brandName
    from `product`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, sn, costPrice, salePrice, imagePath, intro, brand_id, brandName
    from `product`
  </select>
  <sql id="base_where">
    <where>
      <if test="keyword != null">
        AND (name LIKE '%' #{keyword} '%' or sn LIKE '%' #{keyword} '%')
      </if>
      <if test="brandId > 0">
        AND brand_id = #{brandId}
      </if>
    </where>
  </sql>
  <select id="queryForCount" resultType="int">
    select count(id) from product
    <include refid="base_where"/>
  </select>
  <select id="queryForList" resultType="Product">
    select id, name, sn, costPrice, salePrice, imagePath, intro, brand_id, brandName
    from product
    <include refid="base_where"/>
    limit #{start},#{pageSize}
  </select>
</mapper>